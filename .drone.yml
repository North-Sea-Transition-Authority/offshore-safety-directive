kind: pipeline
type: docker
name: default

steps:

  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        # We can only mount volume caches into the working directory, so all steps which use Gradle must have
        # the GRADLE_USER_HOME environment variable pointing here.
        - ./gradle_cache
        - ./sonar_cache

  - name: fetch-fds-submodule
    image: alpine/git:v2.26.2
    commands:
      - echo "$${BITBUCKET_SSH_KEY}" > bitbucket_ssh_key
      - chmod 600 bitbucket_ssh_key
      - export GIT_SSH_COMMAND="ssh -i bitbucket_ssh_key -F /dev/null  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      - git submodule update --init --recursive
    environment:
      BITBUCKET_SSH_KEY:
        from_secret: bitbucket_ssh_key

  - name: build-frontend
    image: node:18
    commands:
      - cd fivium-design-system-core && npm install && npx gulp build && cd ..
      - npm install
      - npx gulp buildAll

  - name: build-backend
    image: quay.io/testcontainers/dind-drone-plugin
    privileged: true
    # See https://confluence.fivium.co.uk/display/JAVA/Testcontainers
    volumes:
      - name: docker-cache-overlay2
        path: /drone/docker/overlay2
      - name: docker-cache-image
        path: /drone/docker/image
    environment:
      CI_WORKSPACE: /drone/src
      GRADLE_USER_HOME: /drone/src/gradle_cache
      DOCKER_CONFIG_JSON:
        from_secret: docker_config
      DOCKER_CONFIG: /drone/dockerconfig # testcontainers override location for Docker config JSON
    settings:
      storage_driver: overlay2 --dns=192.168.10.1 --insecure-registry repo1.dev.fivium.local:5000
      cmd:
        - mkdir $DOCKER_CONFIG
        - echo $DOCKER_CONFIG_JSON > $DOCKER_CONFIG/config.json
        - chmod +x gradlew
        - ./gradlew generateJooq
        - ./gradlew checkstyleMain test publishEpmqMessagesIntegrationTestPublicationToMavenLocal epmqMessagesJarIntegrationTest bootJar
      build_image: repo1.dev.fivium.local:5000/docker-compose-java21

  - name: sync-reports
    image: alpine:3.16.0
    commands:
      - mkdir -p /var/webfiles/${DRONE_BUILD_NUMBER}
      - cp -r build/reports /var/webfiles/${DRONE_BUILD_NUMBER}
    volumes:
      - name: webfiles
        path: /var/webfiles
    when:
      status: [ success, failure ]

  - name: code-analysis
    image: repo1.dev.fivium.local:5000/sonarcloud-scan-java21:latest
    environment:
      SONARCLOUD_TOKEN:
        from_secret: sonarcloud_token
      GRADLE_USER_HOME: /drone/src/gradle_cache
      # This SONAR_USER_HOME is the cache path - not the actual user home
      SONAR_USER_HOME: /drone/src/sonar_cache
    commands:
      - chmod +x gradlew
      - ./gradlew sonarqube -info
    when:
      # The Pull Request Pipeline will run the Code Analysis on all other branches (once a PR is open)
      branch:
        - develop
        - main
        - drone/*

  - name: publish-docker-develop
    image: plugins/docker:19.03.8
    settings:
      registry: quay.io
      repo: quay.io/fivium/offshore-safety-directive
      tags:
        - develop
        - develop-${DRONE_BUILD_NUMBER}
      config:
        from_secret: docker_config
    when:
      branch:
        - develop
      status:
        - success

  - name: publish-docker
    image: plugins/docker:19.03.8
    settings:
      registry: quay.io
      repo: quay.io/fivium/offshore-safety-directive
      tags:
        - ${DRONE_BRANCH/\//-}-${DRONE_BUILD_NUMBER}
      config:
        from_secret: docker_config
    when:
      branch:
        - main
        - hotfix/**
        - release/**
      status:
        - success

  - name: trivy-build-image
    image: docker:20.10.9
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - docker build -t quay.io/fivium/offshore-safety-directive:trivy-scan-target .

  - name: trivy-scan
    image: aquasec/trivy:0.47.0
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: drone-trivy-cache
        path: /root/trivy-cache
      - name: webfiles
        path: /var/webfiles
    commands:
      # timeout set as initial cache population can seemingly take a while sometimes
      - trivy image --timeout 30m --exit-code 1 quay.io/fivium/offshore-safety-directive:trivy-scan-target
    when:
      status:
        - success

  - name: publish-epmq-messages-jar-snapshot
    image: eclipse-temurin:21-jdk
    environment:
      NEXUS_USERNAME: jenkins
      NEXUS_PASSWORD:
        from_secret: nexus_password
    commands:
      - export EPMQ_MESSAGES_JAR_VERSION=$(echo ${DRONE_BRANCH} | sed 's/feature\\\///g' | sed 's/\\\//-/g')-SNAPSHOT
      - echo $EPMQ_MESSAGES_JAR_VERSION
      - ./gradlew :publishEpmqMessagesPublicationToSnapshotsRepository
    when:
      branch:
        - develop
        - feature/**
      event:
        - push

  - name: publish-epmq-messages-jar-release
    image: eclipse-temurin:21-jdk
    environment:
      NEXUS_USERNAME: jenkins
      NEXUS_PASSWORD:
        from_secret: nexus_password
    commands:
      - export EPMQ_MESSAGES_JAR_VERSION=${DRONE_TAG}
      - echo EPMQ_MESSAGES_JAR_VERSION
      - ./gradlew :publishEpmqMessagesPublicationToReleasesRepository
    when:
      event:
        - tag

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./gradle_cache
        - ./sonar_cache

  - name: slack
    image: plugins/slack
    settings:
      webhook: https://hooks.slack.com/services/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
      channel: offshore-safety-directive-builds
      template: "*{{build.status}}* <{{build.link}}|Commit {{truncate build.commit 7}} on {{build.branch}} by ${DRONE_COMMIT_AUTHOR_NAME}>\nReports published to: http://drone-assets.fivium.local:9090/offshore-safety-directive/{{build.number}}/"
    when:
      status: [ success, failure ]

trigger:
  event:
    include:
    - push
    - tag

volumes:
  - name: webfiles
    host:
      path: /home/fivium/www/offshore-safety-directive

  - name: drone-cache
    host:
      path: /home/fivium/drone-cache

  - name: docker-sock
    host:
      path: /var/run/docker.sock

  - name: docker-cache-overlay2
    host:
      path: /home/fivium/docker-drone-cache-v2/overlay2

  - name: docker-cache-image
    host:
      path: /home/fivium/docker-drone-cache-v2/image

  - name: drone-trivy-cache
    host:
      path: /root/.cache/

---

kind: pipeline
type: docker
name: github-pr

clone:
  disable: true

steps:

  - name: clone
    image: alpine/git:v2.26.2
    commands:
      # Manually cloning as there seems to be a bug with DRONE_BRANCH on Pull Request Events
      # DRONE_BRANCH is set to the target branch, rather than the current branch
      # This means that Sonarcloud doesn't think anything has changed
      - git clone https://github.com/Fivium/offshore-safety-directive.git .
      - git checkout $DRONE_SOURCE_BRANCH

  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        # We can only mount volume caches into the working directory, so all steps which use Gradle must have
        # the GRADLE_USER_HOME environment variable pointing here.
        - ./gradle_cache
        - ./sonar_cache

  - name: fetch-fds-submodule
    image: alpine/git:v2.26.2
    commands:
      - echo "$${BITBUCKET_SSH_KEY}" > bitbucket_ssh_key
      - chmod 600 bitbucket_ssh_key
      - export GIT_SSH_COMMAND="ssh -i bitbucket_ssh_key -F /dev/null  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      - git submodule update --init --recursive
    environment:
      BITBUCKET_SSH_KEY:
        from_secret: bitbucket_ssh_key

  - name: build-frontend
    image: node:18
    commands:
      - cd fivium-design-system-core && npm install && npx gulp build && cd ..
      - npm install
      - npx gulp buildAll

  # This is in the PR pipeline so the code-analysis below can access the test data (to see coverage)
  - name: build-backend
    image: quay.io/testcontainers/dind-drone-plugin
    privileged: true
    environment:
      CI_WORKSPACE: /drone/src
      GRADLE_USER_HOME: /drone/src/gradle_cache
      DOCKER_CONFIG_JSON:
        from_secret: docker_config
      DOCKER_CONFIG: /drone/dockerconfig
    volumes:
      - name: docker-cache-overlay2
        path: /drone/docker/overlay2
      - name: docker-cache-image
        path: /drone/docker/image
    settings:
      storage_driver: overlay2 --dns=192.168.10.1
      cmd:
        - mkdir /drone/dockerconfig
        - echo $DOCKER_CONFIG_JSON > /drone/dockerconfig/config.json
        - chmod +x gradlew
        - ./gradlew generateJooq
        - ./gradlew checkstyleMain test bootJar --continue --parallel --max-workers=3
      build_image: repo1.dev.fivium.local:5000/docker-compose-java21

  # This is in the PR pipeline as only PR events get the necessary information for proper github integration
  - name: code-analysis
    image: repo1.dev.fivium.local:5000/sonarcloud-scan-java21:latest
    environment:
      SONARCLOUD_TOKEN:
        from_secret: sonarcloud_token
      GRADLE_USER_HOME: /drone/src/gradle_cache
      # This SONAR_USER_HOME is the cache path - not the actual user home
      SONAR_USER_HOME: /drone/src/sonar_cache
    commands:
      - chmod +x gradlew
      - ./gradlew sonarqube -info

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./gradle_cache
        - ./sonar_cache

trigger:
  event:
    - pull_request

volumes:
  - name: drone-cache
    host:
      path: /home/fivium/drone-cache

  - name: docker-cache-overlay2
    host:
      path: /home/fivium/docker-drone-cache-v2/overlay2

  - name: docker-cache-image
    host:
      path: /home/fivium/docker-drone-cache-v2/image

---

kind: secret
name: docker_config
data: GHVOXxAK7e/DsSw9I8LdzoCJVMFOWtFHcd+9vMEjq+MH6tK//qSZhh+kTM8BpniFU4qujR2KA0lYrxoQb+Hv7KVOLB2eU5VtZYYksnaHwRsf5lY0UD6azSvRqStqmHn2ET+7i5YAuyYNj1IhzAkiXZyz9NknVqRHC4SuI6qiGnxtU5DdSjNps1dqVr7V6WN/FOYwvMAnIuii4kxhMp9ti2/rVbAbjmZf7CpW9zyP58da55sHqusZWjB/mlf3gz+Nhndm7j24mQOcyIV1GgOltv121Qt7y22VMVWZCrwRE3Xy20YLSCh1x7wkvT0nKSDtgjQ+uaDKtE/mJmGF+5Vj2/83GNFmEzzE6vv52xBF

---

kind: secret
name: sonarcloud_token
data: qGI/3GMzl5uIWHaCGjbPQYcW0pABTPglsFKDyZTPssuHSYIgyoPAWr34a9wu720PTUaFv4sBLxCMvs2R8O0XeJ49GbM=

---

kind: secret
name: bitbucket_ssh_key
data: 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

---

kind: secret
name: drone_token
data: WDOPuypCNVJ4qwu0gkfO7+8XspeSrhxqebUILxvkQsdhQBoVu090+Iggcv0XvC2xdqUyRSMp2HyKuBEB

---

kind: secret
name: nexus_password
data: tUqqxLEq9I73Ld0q5X0YUVjWbW/32/zxVUAHbnkrTaJy01yfog==
